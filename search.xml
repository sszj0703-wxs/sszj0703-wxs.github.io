<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo介绍与博客搭建</title>
    <url>/2020/08/13/Hexo%E4%BB%8B%E7%BB%8D%E4%B8%8E%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="Hexo-简介"><a href="#Hexo-简介" class="headerlink" title="Hexo 简介"></a>Hexo 简介</h2><p>主页： <a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a><br>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<a id="more"></a>    
<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul>
<li>超快速度<br> Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</li>
<li>支持Markdown<br> Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</li>
<li>一键部署<br> 只需一条指令即可部署到 GitHub Pages, Heroku 或其他平台。</li>
<li>可扩展性强<br> 强大的 API 带来无限的可能，与数种模板引擎（EJS，Pug，Nunjucks）和工具（Babel，PostCSS，Less/Sass）轻易集成。</li>
</ul>
<p>但是静态博客并非没有缺点。动态博客更新文章时,脚本是不变的,只需要更新数据库。静态博客要频繁改动文件,不支持增量式上传的东西,比如ftp,就难于管理。此外,还要十分熟悉git各种命令,才能部署页面。</p>
<hr>
<h3 id="源码结构"><a href="#源码结构" class="headerlink" title="源码结构"></a>源码结构</h3><p>  <img src="/images/md/hexomd.webp"></p>
<table>
<thead>
<tr>
<th align="left">文件/文件夹</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">_config.yml</td>
<td align="left">配置文件</td>
</tr>
<tr>
<td align="left">public</td>
<td align="left">生成的静态文件，这个目录最终会发布到服务器</td>
</tr>
<tr>
<td align="left">scaffolds</td>
<td align="left">一些通用的markdown模板</td>
</tr>
<tr>
<td align="left">source</td>
<td align="left">编写的markdown文件，_drafts草稿文件，_posts发布的文章</td>
</tr>
<tr>
<td align="left">themes</td>
<td align="left">博客的主题模板</td>
</tr>
</tbody></table>
<p>我们正常使用，修改最多的源码是_config.yml文件，不管是博客的基础配置，还是模板，都是修改这个文件。<br>source是我们日常写文章要用的目录，是我们日常操作的文件夹。<br>如果针对下载的模板修改，那么就需要操作themes了。hexo是用node.js编写的程序，所以theme的修改也是比较容易的。</p>
<hr>
<h2 id="Hexo-安装使用"><a href="#Hexo-安装使用" class="headerlink" title="Hexo 安装使用"></a>Hexo 安装使用</h2><h3 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h3><ol>
<li>安装Git</li>
<li>安装Node.js</li>
<li>安装Hexo</li>
<li>GitHub创建个人仓库</li>
<li>生成SSH添加到GitHub</li>
<li>将hexo部署到GitHub</li>
<li>设置个人域名（可以不设置）</li>
<li>使用及主题选择配置</li>
<li>git分支多终端工作（换电脑如何继续写博客）</li>
<li>FQA</li>
</ol>
<hr>
<h3 id="安装GIT"><a href="#安装GIT" class="headerlink" title="安装GIT"></a>安装GIT</h3><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。<br>windows：到git官网上下载<a href="https://gitforwindows.org/" title="download git">download git</a>,下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。<br>linux：</p>
<pre><code>sudo apt-get install git</code></pre>
<p>安装好后，用git –version 来查看一下版本<br>windows在git安装完后，就可以直接使用git bash来敲命令行了，不用自带的cmd，cmd有点难用。</p>
<hr>
<h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。<br>windows：<a href="https://nodejs.org/en/download/" title="https://nodejs.org/en/download/">download nodejs</a>选择LTS版本就行了。<br>linux：</p>
<pre><code>sudo apt-get install nodejs
sudo apt-get install npm</code></pre>
<p>安装完后,打开命令行,检查一下有没有安装成功。</p>
<pre><code>node -v
npm -v</code></pre>
<h3 id="安装HEXO"><a href="#安装HEXO" class="headerlink" title="安装HEXO"></a>安装HEXO</h3><p>创建一个文件夹blog，这个文件夹下直接右键git bash打开。输入以下命令：</p>
<ul>
<li><strong>全局安装 hexo。</strong></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure>
<p>依旧用hexo -v查看一下版本</p>
<ul>
<li><strong>初始化</strong></li>
</ul>
<p>hexo init，就会自动构建一个 hexo 项目，紧接着执行 hexo s。<br>浏览器访问 localhost:4000 就可以看到效果啦！过程一定要快，凉了就不好吃了。</p>
<pre><code>    hexo init
    // 本地运行
    hexo s</code></pre>
<ul>
<li><strong>安装插件</strong></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>新建完成后，指定文件夹目录下有：</p>
<ol>
<li>node_modules: 依赖包</li>
<li>public：存放生成的页面</li>
<li>scaffolds：生成文章的一些模板</li>
<li>source：用来存放你的文章</li>
<li>themes：主题</li>
<li>** _config.yml: 博客的配置文件**</li>
</ol>
<hr>
<h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><p>都说了要给他人访问，如果你连个仓库都没有，是不是说不过去？出门右转上 github 新建一个仓库，仓库名必须为 <user-name>.github.io 格式，其中 <user-name> 是你 github 的昵称。不要问我为什么，问我我也不想回答你。<br>登录github 点击create repository新建仓库。</p>
<h3 id="生成SSH添加到GitHub"><a href="#生成SSH添加到GitHub" class="headerlink" title="生成SSH添加到GitHub"></a>生成SSH添加到GitHub</h3><p>回到你的git bash命令行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure>
<p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。<br>可以用以下两条，检查一下你有没有输对</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure>
<p>创建SSH,一路回车。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure>
<p>这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。<br>ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。<br>而后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key<br>把你的id_rsa.pub里面的信息复制进去。</p>
<p>查看是否成功</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="将hexo部署到GitHub"><a href="#将hexo部署到GitHub" class="headerlink" title="将hexo部署到GitHub"></a>将hexo部署到GitHub</h3><ul>
<li><strong>配置：</strong></li>
</ul>
<p>打开站点配置文件 _config.yml 找到deploy配置如下</p>
<pre><code>deploy:
  type: git
  repo: &lt;个人仓库地址&gt; https://github.com/YourgithubName/YourgithubName.github.io.git
  branch: &lt;deploy 的分支&gt; master</code></pre>
<ul>
<li><strong>安装命令：</strong></li>
</ul>
<p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>部署：</strong></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
<p>其中 hexo clean清除了你之前生成的东西，可以用 hexo cl缩写，也可以不加。<br>hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写<br>hexo deploy 部署文章，可以用hexo d缩写</p>
<p>注意deploy时可能要你输入username和password。<br>部署成功了，过一会儿就可以在<a href="http://yourname.github.io/">http://yourname.github.io</a> 这个网站看到你的博客了！！</p>
<hr>
<h3 id="设置个人域名-可以不设置"><a href="#设置个人域名-可以不设置" class="headerlink" title="设置个人域名(可以不设置)"></a>设置个人域名(可以不设置)</h3><p>现在你的个人网站的地址是 yourname.github.io，如果觉得这个网址逼格不太够，这就需要你设置个人域名了。但是需要花钱。<br>注册一个阿里云账户,在阿里云上买一个域名，各个后缀的价格不太一样，比如最广泛的.com就比较贵，看个人喜好咯。你需要先去进行实名认证,然后在域名控制台中，看到你购买的域名。点解析进去，添加解析。其中192.30.252.153 和 192.30.252.154 是GitHub的服务器地址。注意，解析线路选择默认，不要像我一样选境外。这个境外是后面来做国内外分流用的。记得现在选择默认！！<br>登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名xxxx.com<br>然后在你的博客文件source中创建一个名为CNAME文件，不要后缀。写上你的域名。<br>最后，在gitbash中，输入</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>过不了多久，再打开你的浏览器，输入你自己的域名，就可以看到搭建的网站啦！</p>
<hr>
<h3 id="使用及主题选择配置"><a href="#使用及主题选择配置" class="headerlink" title="使用及主题选择配置"></a>使用及主题选择配置</h3><ul>
<li><strong>使用</strong>：</li>
</ul>
<p>接下来你就可以正式开始写文章了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new title</span><br></pre></td></tr></table></figure>
<p>其实 hexo new 命令其实是</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>
<p>只不过layout默认是post。<br>如果你想另起一页，那么可以使用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new page board</span><br></pre></td></tr></table></figure>
<p>系统会自动给你在source文件夹下创建一个board文件夹，以及board文件夹中的index.md，这样你访问的board对应的链接就是<a href="http://xxx.xxx/board%E3%80%82">http://xxx.xxx/board。</a><br>draft是草稿的意思，也就是你如果想写文章，又不希望被看到，那么可以</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new draft newpage</span><br></pre></td></tr></table></figure>
<p>这样会在source/_draft中新建一个newpage.md文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo server --draft</span><br></pre></td></tr></table></figure>
<p>在本地端口中开启服务预览。<br>如果你的草稿文件写完了，想要发表到post中</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo publish draft newpage</span><br></pre></td></tr></table></figure>
<p>就会自动把newpage.md发送到post中。<br>然后在source/_post中打开markdown文件，就可以开始编辑了。当你写完的了部署上去</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>hexo基础配置</strong></li>
</ul>
<p>在文件根目录下的_config.yml，就是整个hexo框架的配置文件了。可以在里面修改大部分的配置。</p>
<ul>
<li>网站：</li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>title</td>
<td>网站标题</td>
</tr>
<tr>
<td>subtitle</td>
<td>网站副标题</td>
</tr>
<tr>
<td>description</td>
<td>网站描述</td>
</tr>
<tr>
<td>author</td>
<td>您的名字</td>
</tr>
<tr>
<td>language</td>
<td>语言 en,zh-CN</td>
</tr>
<tr>
<td>timezone</td>
<td>时区，Hexo 默认使用您电脑的时区</td>
</tr>
</tbody></table>
<ul>
<li>网址：</li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>url</td>
<td>网址（这里写你的域名）</td>
</tr>
<tr>
<td>root</td>
<td>网站根目录</td>
</tr>
<tr>
<td>permalink</td>
<td>文章的<a href="https://hexo.io/zh-cn/docs/permalinks" title="永久链接">永久链接</a>格式</td>
</tr>
<tr>
<td>permalink_defaults</td>
<td>永久链接中各部分的默认值</td>
</tr>
</tbody></table>
<ul>
<li>其他：</li>
</ul>
<p>这里主要是主题和仓库的配置</p>
<pre><code>theme: landscape

# Deployment
## Docs: https://hexo.io/docs/deployment.html
deploy:
type: git
repo: &lt;repository url&gt;
branch: [branch]</code></pre>
<p>theme就是选择什么主题，也就是在theme这个文件夹下，在官网上有很多个主题，默认给你安装的是lanscape这个主题。当你需要更换主题时，在官网上下载，把主题的文件放在theme文件夹下，再修改这个参数就可以了，个人推荐nexT。<br>接下来这个deploy就是网站的部署的，repo就是仓库(Repository)的简写。branch选择仓库的哪个分支。这个在之前进行github page部署的时候已经修改过了，不再赘述。而这个在后面进行双平台部署的时候会再次用到。</p>
<p><strong>其他配置可默认，不在一一详述，有兴趣的可以去官网看看。</strong></p>
<ul>
<li>模板</li>
</ul>
<p>Front-matter 是文件最上方以 — 分隔的区域。例如：</p>
<pre><code>title: Hello World
date: 2013/7/13 20:46:25
---</code></pre>
<p>scaffolds文件夹存放的就是模板文件，一般会有3个 draft.md(草稿)，page.md(创建新文件夹)，post.md(创建新博客)。<br>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>layout</td>
<td>布局</td>
</tr>
<tr>
<td>title</td>
<td>标题</td>
</tr>
<tr>
<td>date</td>
<td>建立日期</td>
</tr>
<tr>
<td>updated</td>
<td>更新日期</td>
</tr>
<tr>
<td>comments</td>
<td>开启文章的评论功能</td>
</tr>
<tr>
<td>tags</td>
<td>标签（不适用于分页）</td>
</tr>
<tr>
<td>categories</td>
<td>分类（不适用于分页）</td>
</tr>
<tr>
<td>permalink</td>
<td>覆盖文章网址</td>
</tr>
</tbody></table>
<ul>
<li><strong>更换主题及其配置</strong></li>
</ul>
<p>官网这里有200多个主题可以选。不过最受欢迎的就是那么几个，比如NexT主题，非常的简洁好看，配置成熟，个人推荐。<br>下载主题：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>hexo 5.0 或者更高版本可以</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-theme-next</span><br></pre></td></tr></table></figure>
<p>主题配置文件是 themes/next/ 文件夹下的_config.yml</p>
<ul>
<li>主题文件结构</li>
<li>menu菜单</li>
<li>sidebar侧边栏</li>
<li>search搜索框</li>
<li>分类</li>
<li>标签</li>
<li>关于</li>
<li>RSS订阅</li>
<li>comment评论系统</li>
</ul>
<hr>
<h3 id="git分支多终端工作（换电脑如何继续写博客）"><a href="#git分支多终端工作（换电脑如何继续写博客）" class="headerlink" title="git分支多终端工作（换电脑如何继续写博客）"></a>git分支多终端工作（换电脑如何继续写博客）</h3><hr>
<h3 id="FQA"><a href="#FQA" class="headerlink" title="FQA"></a>FQA</h3>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>欢迎来到我的博客</title>
    <url>/2020/08/12/hello-world/</url>
    <content><![CDATA[<p>宁可十年不将军，不可一日不拱卒</p>
<a id="more"></a>

<h2 id="好似神马都会，又好像神马都不会！！！"><a href="#好似神马都会，又好像神马都不会！！！" class="headerlink" title="好似神马都会，又好像神马都不会！！！"></a>好似神马都会，又好像神马都不会！！！</h2><h3 id="不会？"><a href="#不会？" class="headerlink" title="不会？"></a>不会？</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">此时要装逼一顿查。。。。。。（装逼完记得写博客，要不然以后没得装！）</span><br></pre></td></tr></table></figure>

<h3 id="会！"><a href="#会！" class="headerlink" title="会！"></a>会！</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">此时唾沫横飞一顿装。。。。。。（回顾或者继续写博客，哪天忘记没得装！）</span><br></pre></td></tr></table></figure>

<p>不要说记得住，老夫逮到就是一顿输出！</p>
]]></content>
      <categories>
        <category>home</category>
      </categories>
      <tags>
        <tag>home</tag>
      </tags>
  </entry>
</search>
